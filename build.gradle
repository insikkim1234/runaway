plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.2'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation group: 'io.awspring.cloud', name: 'spring-cloud-starter-aws', version: '2.4.4'

    implementation group: 'com.amazonaws', name: 'aws-java-sdk-s3', version: '1.12.416'
    implementation group: 'com.github.sarxos', name: 'webcam-capture', version: '0.3.12'
    implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.3.8' // Model mapper
    implementation group: 'com.auth0', name: 'java-jwt', version: '4.4.0'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    
    implementation 'org.springframework.boot:spring-boot-starter-validation'
}

tasks.named('test') {
	useJUnitPlatform()
}

/// 추가 부분 시작(맨 윗줄 1개 제외)
// React build 설정
// main/리엑트 파일명
def reactAppDir = "$projectDir/src/main/reactjs"


processResources {
    dependsOn("copyPrivate")
    dependsOn "copyReactFile"
}


task copyReactFile(type: Copy) {
    dependsOn "buildReact"
    from "$reactAppDir/build"
    into "$projectDir/src/main/resources/static/"
}

task buildReact(type: Exec) {
    dependsOn "installReact"
    workingDir "$reactAppDir"
    inputs.dir "$reactAppDir"
    group = BasePlugin.BUILD_GROUP

    def run_env = System.getenv("RUN_ENV") ?: "local"
    run_env = run_env.toLowerCase(Locale.ROOT)

    if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
        commandLine "npm.cmd", "run", "build:" + run_env
    } else {
        commandLine "npm", "run", "build:" + run_env
    }
}

task installReact(type: Exec) {
    workingDir "$reactAppDir"
    inputs.dir "$reactAppDir"
    group = BasePlugin.BUILD_GROUP
    if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
        commandLine "npm.cmd", "install"
    } else {
        commandLine "npm", "install"
    }
}

task copyPrivate(type: Copy) {
    copy {
        from "./runaway-private"
        include "*.yml"
        into "src/main/resources"
    }

    copy {
        from "./runaway-private"
        include ".env*"
        into "src/main/reactjs"
    }
}
